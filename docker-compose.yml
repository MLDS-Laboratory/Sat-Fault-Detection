version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres # password isn't really needed since all security is set to trust
      POSTGRES_DB: telemetry_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - telemetry-network

  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    networks:
      - telemetry-network

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
      - telemetry-network

  simulation:
    build: ./simulation-container
    depends_on:
      - postgres
    networks:
      - telemetry-network

  middleware:
    build: ./middleware
    depends_on:
      - simulation
      - kafka
    networks:
      - telemetry-network

  influxdb:
    image: influxdb:1.8
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - telemetry-network

  telegraf:
    image: telegraf:1.18
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - kafka
      - influxdb
    networks:
      - telemetry-network

  anomaly_detection:
    build: ./anomaly-detection
    depends_on:
      - kafka
    networks:
      - telemetry-network

  grafana:
    build: ./grafana
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    networks:
      - telemetry-network

volumes:
  postgres_data:
  influxdb_data:

networks:
  telemetry-network:
    driver: bridge
