version: '3.8'

services:
  sim_middleware:
    build: ./simulation-container
    volumes:
      - ./simulation-container/simulations:/basilisk/simulations
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: telemetry_db
    depends_on:
      - kafka
    networks:
      - telemetry-network

  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    networks:
      - telemetry-network

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
      - telemetry-network

  influx_telegraf:
    build: ./influx_telegraf-container
    volumes:
      - influx_telegraf_data:/var/lib/influxdb
      - ./influx_telegraf-container/influxdb.conf:/etc/influxdb/influxdb.conf
      - ./influx_telegraf-container/telegraf.conf:/etc/telegraf/telegraf.conf
    depends_on:
      - kafka
    networks:
      - telemetry-network

  anomaly_detection:
    build: ./anomaly-detection-container
    volumes:
      - ./anomaly-detection-container:/app
      - ./anomaly-detection-container/models:/app/models
      - ./anomaly-detection-container/config.json:/app/config.json
    depends_on:
      - kafka
      - influx_telegraf
    networks:
      - telemetry-network

  grafana:
    build: ./grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - influx_telegraf
    networks:
      - telemetry-network

volumes:
  influx_telegraf_data:

networks:
  telemetry-network:
    driver: bridge
